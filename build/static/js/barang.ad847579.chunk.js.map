{"version":3,"sources":["components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","components/common/react-notifications/index.js","containers/pages/Pagination.js","../node_modules/jspdf/dist sync","containers/pages/DataListView.js","containers/pages/ListPageHeadingBarang.js","containers/pages/TitleBarang.js","views/app/menu-barang/barang.js"],"names":["Colxx","props","widths","Separator","className","getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","heading","Notifications","Pagination","React","Component","componentDidMount","onChangePage","e","this","render","totalPage","currentPage","numberLimit","lastIsActive","firstIsActive","startPoint","endPoint","parseInt","points","i","push","firstPageButtonClassName","lastPageButtonClassName","prevPageButtonClassName","nextPageButtonClassName","xxs","onClick","webpackEmptyContext","req","Error","code","keys","resolve","module","exports","memo","product","collect","data","Card","window","location","href","name","category","brand","year","qty","ListPageHeadingBarang","constructor","super","toggleDisplayOptions","setState","prevState","displayOptionsIsOpen","toggleSplit","dropdownSplitOpen","toggleModal","modal","state","generatePDF","apiClient","get","then","res","assets","doc","jsPDF","body","asset","autoTable","html","head","save","Date","now","catch","console","log","message","filteredData","value","messages","intl","changeOrderBy","changePageSize","selectedPageSize","totalItemCount","selectedOrderOption","startIndex","endIndex","onSearchKey","orderOptions","pageSizes","Row","IntlMessages","Button","target","Breadcrumb","color","Collapse","isOpen","UncontrolledDropdown","DropdownToggle","caret","size","label","DropdownMenu","DropdownItem","column","type","placeholder","onKeyPress","right","Modal","toggle","ModalHeader","ModalBody","FormGroup","Input","fileName","onChange","CustomInput","XLSX","fileFormat","ModalFooter","handleExport","injectIntl","TitleBarang","CardBody","DataListPages","modalOpen","find","dataListRender","page","search","toLowerCase","onContextMenuClick","selectedItems","action","onContextMenu","clickedProductId","includes","mouseTrap","require","displayMode","lastChecked","isLoading","getIndex","arr","prop","meta","total","items","count","NotificationManager","error","visible","changeDisplayMode","handleChangeSelectAll","selectedItemsLength","itemsLength","isSelect"],"mappings":"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","file":"static/js/barang.ad847579.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import Notifications from './Notifications.js';\r\nimport NotificationContainer from './NotificationContainer';\r\nimport NotificationManager from './NotificationManager';\r\n\r\nexport { Notifications, NotificationContainer, NotificationManager };\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Nav, NavItem, NavLink } from \"reactstrap\";\r\nclass Pagination extends React.Component {\r\n  componentDidMount() {}\r\n  onChangePage(e) {\r\n    this.props.onChangePage(e);\r\n  }\r\n  render() {\r\n    const {\r\n      totalPage = 0,\r\n      currentPage = 1,\r\n      numberLimit = 5,\r\n      lastIsActive = true,\r\n      firstIsActive = true\r\n    } = this.props;\r\n\r\n    let startPoint = 1;\r\n    let endPoint = numberLimit;\r\n\r\n    if (numberLimit > totalPage) {\r\n      startPoint = 1;\r\n      endPoint = totalPage;\r\n    } else if (currentPage <= parseInt(numberLimit / 2, 10)) {\r\n      startPoint = 1;\r\n      endPoint = numberLimit;\r\n    } else if (currentPage + parseInt(numberLimit / 2, 10) <= totalPage) {\r\n      startPoint = currentPage - parseInt(numberLimit / 2, 10);\r\n      endPoint = currentPage + parseInt(numberLimit / 2, 10);\r\n    } else {\r\n      startPoint = totalPage - (numberLimit - 1);\r\n      endPoint = totalPage;\r\n    }\r\n    startPoint = startPoint === 0 ? 1 : startPoint;\r\n    const points = [];\r\n    for (var i = startPoint; i <= endPoint; i++) {\r\n      points.push(i);\r\n    }\r\n\r\n    let firstPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let lastPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    let prevPageButtonClassName = currentPage <= 1 ? \"disabled\" : \"\";\r\n    let nextPageButtonClassName = currentPage >= totalPage ? \"disabled\" : \"\";\r\n    return totalPage > 1 ? (\r\n      <Colxx xxs=\"12\" className=\"mt-3\">\r\n        <Nav className=\"pagination justify-content-center\">\r\n          {firstIsActive && (\r\n            <NavItem className={`page-item ${firstPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link first\"\r\n                onClick={() => this.onChangePage(1)}>\r\n                <i className=\"simple-icon-control-start\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n\r\n          <NavItem className={`page-item ${prevPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link prev\"\r\n              onClick={() => this.onChangePage(currentPage - 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-left\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {points.map(i => {\r\n            return (\r\n              <NavItem\r\n                key={i}\r\n                className={`page-item ${currentPage === i && \"active\"}`}>\r\n                <NavLink\r\n                  className=\"page-link\"\r\n                  onClick={() => this.onChangePage(i)}\r\n                >\r\n                  {i}\r\n                </NavLink>\r\n              </NavItem>\r\n            );\r\n          })}\r\n          <NavItem className={`page-item ${nextPageButtonClassName}`}>\r\n            <NavLink\r\n              className=\"page-link next\"\r\n              onClick={() => this.onChangePage(currentPage + 1)}\r\n            >\r\n              <i className=\"simple-icon-arrow-right\" />\r\n            </NavLink>\r\n          </NavItem>\r\n          {lastIsActive && (\r\n            <NavItem className={`page-item ${lastPageButtonClassName}`}>\r\n              <NavLink\r\n                className=\"page-link last\"\r\n                onClick={() => this.onChangePage(totalPage)}>\r\n                <i className=\"simple-icon-control-end\" />\r\n              </NavLink>\r\n            </NavItem>\r\n          )}\r\n        </Nav>\r\n      </Colxx>\r\n    ) : (\r\n      <Colxx xxs=\"12\" className=\"mt-2\" />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 423;","import React from \"react\";\r\nimport { ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport { Card } from \"reactstrap\";\r\n\r\nconst DataListView = ({ product, collect }) => {\r\n  return (\r\n    <Colxx xxs=\"12\" className=\"mb-3\" key ={product.code}>\r\n      <ContextMenuTrigger id=\"menu_id\" data={product.id} collect={collect}>\r\n        <Card className=\"btn-shadow\" onClick={() => {\r\n          window.location.href=\"./detail-barang/\" + product.id\r\n          }}>\r\n\r\n          <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n            <div className=\"card-body align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.code}\r\n              </p>\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.name}\r\n              </p>\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.category}\r\n              </p>\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.brand}\r\n              </p>\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.year}\r\n              </p>\r\n              <p className=\"mb-1 text-p text-small w-50\">\r\n                {product.qty}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </ContextMenuTrigger>\r\n    </Colxx>\r\n  );\r\n};\r\n\r\nexport default React.memo(DataListView);","import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport {\r\n  Row,\r\n  Button,\r\n  UncontrolledDropdown,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  DropdownToggle,\r\n  Collapse,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  FormGroup,\r\n  Input,\r\n  CustomInput,\r\n  ModalFooter\r\n} from \"reactstrap\";\r\nimport { injectIntl } from \"react-intl\";\r\n\r\nimport { Colxx, Separator } from \"../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../navs/Breadcrumb\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\nimport { Link } from \"react-router-dom\";\r\nimport XLSX from \"xlsx\"\r\nimport * as FileSaver from \"file-saver\"\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport { apiClient } from \"../../helpers/ApiService\";\r\n\r\nclass ListPageHeadingBarang extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      dropdownSplitOpen: false,\r\n      displayOptionsIsOpen: false,\r\n      filteredData: [],\r\n      value: \"\",\r\n    };\r\n  }\r\n\r\n  toggleDisplayOptions = () => {\r\n    this.setState(prevState => ({\r\n      displayOptionsIsOpen: !prevState.displayOptionsIsOpen\r\n    }));\r\n  };\r\n  toggleSplit =()=> {\r\n    this.setState(prevState => ({\r\n      dropdownSplitOpen: !prevState.dropdownSplitOpen\r\n    }));\r\n  }\r\n  toggleModal = () => {\r\n    this.setState({ modal: !this.state.modal })\r\n  }\r\n\r\n  generatePDF = () => {\r\n    try {\r\n      apiClient.get('/assets')\r\n            .then(res => {\r\n                const assets = res.data.data\r\n                const doc = new jsPDF('p', 'pt')\r\n\r\n                let body = []\r\n\r\n                for(const asset of assets) {\r\n                  let data = []\r\n\r\n                  data.push(asset.code)\r\n                  data.push(asset.name) \r\n                  data.push(asset.category) \r\n                  data.push(asset.brand)\r\n                  data.push(asset.year)\r\n                  data.push(asset.qty)\r\n                  body.push(data)\r\n                }\r\n\r\n                doc.autoTable({ html: '#my-table' })\r\n                doc.autoTable({\r\n                  head: [['Kode Barang', 'Nama Barang', 'Jenis Barang', 'Merek', 'Tahun','Jumlah']],\r\n                  body: body,\r\n                })\r\n\r\n                doc.save(`asset-report-${Date.now()}.pdf`)\r\n            }).catch((e) => {\r\n            console.log(e.message)\r\n        });\r\n    } catch(e){\r\n\r\n    }\r\n    \r\n  }\r\n\r\n  render() {\r\n    const { messages } = this.props.intl;\r\n    const {\r\n      changeOrderBy,\r\n      changePageSize,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      match,\r\n      startIndex,\r\n      endIndex,\r\n      onSearchKey,\r\n      orderOptions,\r\n      pageSizes,\r\n      heading\r\n    } = this.props;\r\n\r\n    const { displayOptionsIsOpen, dropdownSplitOpen } = this.state;\r\n    return (\r\n      <Row>\r\n        <Colxx xxs=\"12\">\r\n          <div className=\"mb-2\">\r\n            <h1>\r\n              <IntlMessages id={heading} />\r\n            </h1>\r\n            \r\n            <div className=\"text-zero top-right-button-container\">\r\n              <Link \r\n                to=\"/app/menu-barang/form-tambah-barang\" \r\n                className=\"btn btn-lg btn-primary\">\r\n                Tambah Barang\r\n              </Link>\r\n            <div className=\"position-relative d-none d-none d-lg-inline-block\">\r\n              <Button\r\n                className=\"btn btn-outline btn-sm ml-2\"\r\n                target=\"_top\"\r\n                onClick={this.generatePDF}\r\n              >\r\n              <i className=\"simple-icon-cloud-download\"/>\r\n              </Button>\r\n            </div>\r\n            </div>\r\n            <Breadcrumb match={match} />\r\n          </div>\r\n\r\n          <div className=\"mb-2\">\r\n            <Button\r\n              color=\"empty\"\r\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\r\n              onClick={this.toggleDisplayOptions}\r\n            >\r\n              <IntlMessages id=\"pages.display-options\" />{\" \"}\r\n              <i className=\"simple-icon-arrow-down align-middle\" />\r\n            </Button>\r\n            <Collapse\r\n              isOpen={displayOptionsIsOpen}\r\n              className=\"d-md-block\"\r\n              id=\"displayOptions\">\r\n\r\n              <div className=\"d-block d-md-inline-block pt-1\">\r\n                <UncontrolledDropdown className=\"mr-1 float-md-left btn-group mb-1\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    <IntlMessages id=\"Sort by : \" />\r\n                    {selectedOrderOption.label}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu>\r\n                    {orderOptions.map((product, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changeOrderBy(product.column)}\r\n                        >\r\n                          {product.label}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n                <div className=\"search-sm d-inline-block float-md-left mr-1 mb-1 align-top\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"keyword\"\r\n                    id=\"search\"\r\n                    placeholder={messages[\"menu.search\"]}\r\n                    onKeyPress={e => onSearchKey(e)}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"float-md-right pt-1\">\r\n                <span className=\"text-muted text-small mr-1\">{`${startIndex}-${endIndex} of ${totalItemCount} `}</span>\r\n                <UncontrolledDropdown className=\"d-inline-block\">\r\n                  <DropdownToggle caret color=\"outline-dark\" size=\"xs\">\r\n                    {selectedPageSize}\r\n                  </DropdownToggle>\r\n                  <DropdownMenu right>\r\n                    {pageSizes.map((size, index) => {\r\n                      return (\r\n                        <DropdownItem\r\n                          key={index}\r\n                          onClick={() => changePageSize(size)}\r\n                        >\r\n                          {size}\r\n                        </DropdownItem>\r\n                      );\r\n                    })}\r\n                  </DropdownMenu>\r\n                </UncontrolledDropdown>\r\n              </div>\r\n            </Collapse>\r\n          </div>\r\n          <Separator className=\"mb-5\" />\r\n        </Colxx>\r\n        <Modal\r\n          isOpen={this.state.modal}\r\n          toggle={this.toggleModal}\r\n          className=\"modal-dialog-centered\">\r\n          <ModalHeader toggle={this.toggleModal}>Export To Excel</ModalHeader>\r\n          <ModalBody>\r\n            <FormGroup>\r\n              <Input\r\n                type=\"text\"\r\n                value={this.state.fileName}\r\n                onChange={e => this.setState({ fileName: e.target.value })}\r\n                placeholder=\"Enter File Name\"\r\n              />\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <CustomInput\r\n                type=\"select\"\r\n                id=\"selectFileFormat\"\r\n                name=\"customSelect\"\r\n                value={XLSX}\r\n                onChange={e => this.setState({ fileFormat: e.target.value })}>\r\n                <option>xlsx</option>\r\n                <option>csv</option>\r\n                <option>txt</option>\r\n              </CustomInput>\r\n            </FormGroup>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"primary\" onClick={this.handleExport}>\r\n              Export\r\n            </Button>\r\n            <Button color=\"flat-danger\" onClick={this.toggleModal}>\r\n              Cancel\r\n            </Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </Row>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default injectIntl(ListPageHeadingBarang);\r\n","import React from \"react\";\r\nimport { Card, CardBody} from \"reactstrap\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst TitleBarang = () => {\r\n  \r\n  return (\r\n    <Card className=\"d-flex flex-row mb-3\">   \r\n      <div className=\"d-flex flex-grow-1 min-width-zero\">\r\n        <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center sm\">\r\n          <p className=\" mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Kode Barang\" />\r\n          </p>\r\n          <p className=\"mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Nama Barang\" />\r\n          </p>\r\n          <p className=\"mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Jenis Barang\" />\r\n          </p>\r\n          <p className=\"mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Merk\" />\r\n          </p>\r\n          <p className=\"mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Tahun\" />\r\n          </p>\r\n          <p className=\"mb-1 text-p text-small font-weight-semibold w-50\">\r\n            <IntlMessages id=\"Stok\" />\r\n          </p>\r\n        </CardBody>\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TitleBarang;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\n\r\nimport DataListView from \"../../../containers/pages/DataListView\";\r\nimport Pagination from \"../../../containers/pages/Pagination\";\r\nimport ListPageHeadingBarang from \"../../../containers/pages/ListPageHeadingBarang\";\r\nimport { apiClient } from \"../../../helpers/ApiService\";\r\nimport TitleBarang from \"../../../containers/pages/TitleBarang\";\r\nimport { NotificationManager } from \"../../../components/common/react-notifications\";\r\n\r\nfunction collect(props) {\r\n  return { data: props.data };\r\n}\r\nconst apiUrl = \"/assets\";\r\n\r\nclass DataListPages extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mouseTrap = require(\"mousetrap\");\r\n\r\n    this.state = {\r\n      displayMode: \"list\",\r\n\r\n      selectedPageSize: 10,\r\n      orderOptions: [\r\n        { column: \"code\", label: \"Kode Barang\" },\r\n        { column: \"name\", label: \"Nama Barang\" },\r\n        { column: \"qty\", label: \"Stok\" }\r\n      ],\r\n\r\n      pageSizes: [10, 20, 30, 50, 100],\r\n\r\n      selectedOrderOption: { column: \"name\", label: \"Nama Barang\" },\r\n      dropdownSplitOpen: false,\r\n      modalOpen: false,\r\n      currentPage: 1,\r\n      totalItemCount: 0,\r\n      totalPage: 1,\r\n      search: \"\",\r\n      selectedItems: [],\r\n      lastChecked: null,\r\n      isLoading: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.dataListRender();\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalOpen: !this.state.modalOpen\r\n    });\r\n  };\r\n\r\n  changeOrderBy = column => {\r\n    this.setState(\r\n      {\r\n        selectedOrderOption: this.state.orderOptions.find(\r\n          x => x.column === column\r\n        )\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n    console.log(column);\r\n  };\r\n\r\n  changePageSize = size => {\r\n    this.setState(\r\n      {\r\n        selectedPageSize: size,\r\n        currentPage: 1\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n  };\r\n\r\n  onChangePage = page => {\r\n    this.setState(\r\n      {\r\n        currentPage: page\r\n      },\r\n      () => this.dataListRender()\r\n    );\r\n  };\r\n\r\n  onSearchKey = e => {\r\n    if (e.key === \"Enter\") {\r\n      this.setState(\r\n        {\r\n          search: e.target.value.toLowerCase()\r\n        },\r\n        () => this.dataListRender()\r\n      );\r\n    }\r\n  };\r\n\r\n  getIndex(value, arr, prop) {\r\n    for (var i = 0; i < arr.length; i++) {\r\n      if (arr[i][prop] === value) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  dataListRender() {\r\n    const {\r\n      selectedPageSize,\r\n      currentPage,\r\n      selectedOrderOption,\r\n      search\r\n    } = this.state;\r\n\r\n    apiClient\r\n      .get(\r\n        `${apiUrl}?per_page=${selectedPageSize}&page=${currentPage}&orderBy=${\r\n        selectedOrderOption.column\r\n        }&search=${search}`\r\n      )\r\n      .then(res => {\r\n        return res.data;\r\n      })\r\n      .then(data => {\r\n        this.setState({\r\n          totalPage: data.meta.total,\r\n          items: data.data,\r\n          selectedItems: [],\r\n          totalItemCount: data.meta.count,\r\n          isLoading: true\r\n        });\r\n      }).catch((e) => {\r\n        console.log(e.message)\r\n        NotificationManager.error(\r\n          \"Silahkan coba kembali beberapa saat lagi!\",\r\n          \"Terjadi Kesalahan\",\r\n          1000000000,\r\n          () => {\r\n            this.setState({ visible: false });\r\n          },\r\n          null\r\n        );\r\n      });\r\n  }\r\n\r\n  onContextMenuClick = (e, data, target) => {\r\n    console.log(\r\n      \"onContextMenuClick - selected items\",\r\n      this.state.selectedItems\r\n    );\r\n    console.log(\"onContextMenuClick - action : \", data.action);\r\n  };\r\n\r\n  onContextMenu = (e, data) => {\r\n    const clickedProductId = data.data;\r\n    if (!this.state.selectedItems.includes(clickedProductId)) {\r\n      this.setState({\r\n        selectedItems: [clickedProductId]\r\n      });\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      currentPage,\r\n      items,\r\n      displayMode,\r\n      selectedPageSize,\r\n      totalItemCount,\r\n      selectedOrderOption,\r\n      selectedItems,\r\n      orderOptions,\r\n      pageSizes,\r\n    } = this.state;\r\n    const { match } = this.props;\r\n    const startIndex = (currentPage - 1) * selectedPageSize;\r\n    const endIndex = currentPage * selectedPageSize;\r\n\r\n    return !this.state.isLoading ? (\r\n      <div className=\"loading\" />\r\n    ) : (\r\n        <Fragment>\r\n          <div className=\"disable-text-selection\">\r\n            <ListPageHeadingBarang\r\n              heading=\"menu.barang\"\r\n              displayMode={displayMode}\r\n              changeDisplayMode={this.changeDisplayMode}\r\n              handleChangeSelectAll={this.handleChangeSelectAll}\r\n              changeOrderBy={this.changeOrderBy}\r\n              changePageSize={this.changePageSize}\r\n              selectedPageSize={selectedPageSize}\r\n              totalItemCount={totalItemCount}\r\n              selectedOrderOption={selectedOrderOption}\r\n              match={match}\r\n              startIndex={startIndex}\r\n              endIndex={endIndex}\r\n              selectedItemsLength={selectedItems ? selectedItems.length : 0}\r\n              itemsLength={items ? items.length : 0}\r\n              onSearchKey={this.onSearchKey}\r\n              orderOptions={orderOptions}\r\n              pageSizes={pageSizes}\r\n              toggleModal={this.toggleModal}\r\n            />\r\n            <TitleBarang />\r\n            <Row>\r\n              {this.state.items.map(product => {\r\n                return (\r\n                  <DataListView\r\n                    key={product.id}\r\n                    product={product}\r\n                    collect={collect}\r\n                    isSelect={this.state.selectedItems.includes(product.id)}\r\n                  />\r\n                );\r\n              })}{\" \"}\r\n              <Pagination\r\n                currentPage={this.state.currentPage}\r\n                totalPage={this.state.totalPage}\r\n                onChangePage={i => this.onChangePage(i)}\r\n              />\r\n            </Row>\r\n          </div>\r\n        </Fragment>\r\n      );\r\n  }\r\n}\r\nexport default DataListPages;"],"sourceRoot":""}