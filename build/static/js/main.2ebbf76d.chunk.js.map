{"version":3,"sources":["redux/menu/actions.js","redux/settings/actions.js","redux/actions.js","constants/defaultValues.js","redux/auth/actions.js","redux/chat/actions.js","serviceWorker.js","redux/settings/reducer.js","redux/menu/reducer.js","redux/auth/reducer.js","redux/todo/reducer.js","redux/chat/reducer.js","redux/surveyList/reducer.js","redux/surveyDetail/reducer.js","redux/reducers.js","redux/auth/saga.js","redux/todo/saga.js","redux/chat/saga.js","redux/surveyList/saga.js","redux/surveyDetail/saga.js","redux/sagas.js","redux/store.js","AppRenderer.js","redux/todo/actions.js","redux/surveyList/actions.js","redux/surveyDetail/actions.js","helpers/Utils.js","helpers/Firebase.js","index.js","assets/css/sass/themes lazy /^/.//gogo/..*/.scss$/ groupOptions: {} namespace object"],"names":["changeSelectedMenuHasSubItems","payload","type","MENU_CHANGE_HAS_SUB_ITEM_STATUS","changeDefaultClassnames","strCurrentClasses","MENU_CHANGE_DEFAULT_CLASSES","addContainerClassname","classname","newClasses","indexOf","MENU_CONTAINER_ADD_CLASSNAME","clickOnMobileMenu","currentClasses","split","filter","x","nextClasses","includes","join","MENU_CLICK_MOBILE_MENU","containerClassnames","menuClickCount","setContainerClassnames","clickIndex","selectedMenuHasSubItems","MENU_SET_CLASSNAMES","changeLocale","locale","localStorage","setItem","CHANGE_LOCALE","LOGIN_USER","LOGIN_USER_SUCCESS","LOGIN_USER_ERROR","REGISTER_USER","REGISTER_USER_SUCCESS","REGISTER_USER_ERROR","LOGOUT_USER","FORGOT_PASSWORD","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","RESET_PASSWORD","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_ERROR","TODO_GET_LIST","TODO_GET_LIST_SUCCESS","TODO_GET_LIST_ERROR","TODO_GET_LIST_WITH_FILTER","TODO_GET_LIST_WITH_ORDER","TODO_GET_LIST_SEARCH","TODO_ADD_ITEM","TODO_ADD_ITEM_SUCCESS","TODO_ADD_ITEM_ERROR","TODO_SELECTED_ITEMS_CHANGE","CHAT_GET_CONTACTS","CHAT_GET_CONTACTS_SUCCESS","CHAT_GET_CONTACTS_ERROR","CHAT_GET_CONVERSATIONS","CHAT_GET_CONVERSATIONS_SUCCESS","CHAT_GET_CONVERSATIONS_ERROR","CHAT_ADD_MESSAGE_TO_CONVERSATION","CHAT_CREATE_CONVERSATION","CHAT_SEARCH_CONTACT","CHAT_CHANGE_CONVERSATION","SURVEY_LIST_GET_LIST","SURVEY_LIST_GET_LIST_SUCCESS","SURVEY_LIST_GET_LIST_ERROR","SURVEY_LIST_GET_LIST_WITH_FILTER","SURVEY_LIST_GET_LIST_WITH_ORDER","SURVEY_LIST_GET_LIST_SEARCH","SURVEY_LIST_ADD_ITEM","SURVEY_LIST_ADD_ITEM_SUCCESS","SURVEY_LIST_ADD_ITEM_ERROR","SURVEY_LIST_SELECTED_ITEMS_CHANGE","SURVEY_GET_DETAILS","SURVEY_GET_DETAILS_SUCCESS","SURVEY_GET_DETAILS_ERROR","SURVEY_DELETE_QUESTION","SURVEY_SAVE","defaultMenuType","subHiddenBreakpoint","menuHiddenBreakpoint","defaultLocale","localeOptions","id","name","direction","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","searchPath","servicePath","me","reactLocalStorage","getObject","token","get","themeColorStorageKey","isMultiColorActive","isDarkSwitchActive","defaultColor","defaultDirection","themeRadiusStorageKey","loginUser","user","history","loginUserSuccess","loginUserError","message","forgotPasswordSuccess","forgotUserMail","forgotPasswordError","resetPasswordSuccess","newPassword","resetPasswordError","registerUserSuccess","registerUserError","getContactsSuccess","contacts","currentUser","getContactsError","error","getConversationsSuccess","conversations","selectedUser","getConversationsError","Boolean","window","location","hostname","match","INIT_STATE","getItem","length","resetPasswordCode","loading","allTodoItems","todoItems","searchKeyword","orderColumn","labels","label","color","orderColumns","column","categories","selectedItems","allContacts","loadingContacts","loadingConversations","selectedUserId","allSurveyItems","surveyItems","survey","reducers","combineReducers","menu","state","action","Object","assign","settings","authUser","uid","todoApp","value","filteredItems","item","sortedItems","sort","a","b","find","keyword","toLowerCase","searchItems","title","detail","status","category","chatApp","searchedContacts","surveyListApp","surveyDetailApp","watchLoginUser","loginWithEmailPassword","watchRegisterUser","registerWithEmailPassword","watchLogoutUser","logout","watchForgotPassword","forgotPassword","watchResetPassword","resetPassword","rootSaga","takeEvery","loginWithEmailPasswordAsync","email","password","auth","signInWithEmailAndPassword","then","console","log","catch","call","put","push","registerWithEmailPasswordAsync","createUserWithEmailAndPassword","registerUser","logoutAsync","signOut","removeItem","forgotPasswordAsync","sendPasswordResetEmail","forgotPasswordStatus","resetPasswordAsync","confirmPasswordReset","resetPasswordStatus","all","fork","getTodoListItems","addTodoItem","watchGetList","wathcAddItem","getTodoListRequest","Promise","success","fail","setTimeout","todoData","data","response","getTodoListSuccess","getTodoListError","addTodoItemRequest","items","createDate","getDateWithFormat","splice","addTodoItemSuccess","addTodoItemError","loadContacts","loadConversations","addMessageToConversation","createNewConversation","watchGetContact","watchGetConversation","watchAddMessageToConversation","watchCreateConversation","loadContactsAsync","contactsData","userId","loadConversationsAsync","conversationsData","users","currentUserId","allConversations","addMessageToConversationAsync","conversation","time","getCurrentTime","messages","sender","text","lastMessageTime","createNewConversationAsync","getSurveyListItems","addSurveyItem","getSurveyListRequest","surveyListData","getSurveyListSuccess","getSurveyListError","addSurveyItemRequest","addSurveyItemSuccess","addSurveyItemError","getSurveyDetailItems","deleteQuestion","watchGetDetail","watchDeleteQuestion","getSurveyDetailRequest","surveyDetailData","deleteQuestionRequest","quesitonId","questions","getSurveyDetailSuccess","getSurveyDetailError","questionId","saveSurvey","getState","authSagas","todoSagas","chatSagas","surveyListSagas","surveyDetailSagas","sagaMiddleware","createSagaMiddleware","middlewares","App","React","lazy","ReactDOM","render","store","initialState","createStore","compose","applyMiddleware","run","sagas","configureStore","fallback","className","document","getElementById","navigator","serviceWorker","ready","registration","unregister","today","Date","dd","getDate","mm","getMonth","getFullYear","now","getHours","getMinutes","getDirection","localValue","isRtl","setDirection","firebase","initializeApp","database","require","map","webpackAsyncContext","req","__webpack_require__","o","resolve","e","Error","code","ids","t","keys","module","exports"],"mappings":"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","file":"static/js/main.2ebbf76d.chunk.js","sourcesContent":["import {\r\n    MENU_SET_CLASSNAMES,\r\n    MENU_CONTAINER_ADD_CLASSNAME,\r\n    MENU_CLICK_MOBILE_MENU,\r\n    MENU_CHANGE_DEFAULT_CLASSES,\r\n    MENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nexport const changeSelectedMenuHasSubItems = (payload) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_HAS_SUB_ITEM_STATUS,\r\n            payload: payload\r\n        }\r\n    )\r\n}\r\n\r\nexport const changeDefaultClassnames = (strCurrentClasses) => {\r\n    return (\r\n        {\r\n            type: MENU_CHANGE_DEFAULT_CLASSES,\r\n            payload: strCurrentClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const addContainerClassname = (classname, strCurrentClasses) => {\r\n    const newClasses = !strCurrentClasses.indexOf(classname) > -1 ? strCurrentClasses + ' ' + classname : strCurrentClasses;\r\n    return (\r\n        {\r\n            type: MENU_CONTAINER_ADD_CLASSNAME,\r\n            payload: newClasses\r\n        }\r\n    )\r\n}\r\n\r\nexport const clickOnMobileMenu = (strCurrentClasses) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '' && x !== 'sub-show-temporary') : '';\r\n    let nextClasses = '';\r\n    if (currentClasses.includes('main-show-temporary')) {\r\n        nextClasses = (currentClasses.filter(x => x !== 'main-show-temporary')).join(' ');\r\n    } else {\r\n        nextClasses = currentClasses.join(' ') + ' main-show-temporary';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_CLICK_MOBILE_MENU,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: 0 }\r\n        }\r\n    )\r\n}\r\n\r\nexport const setContainerClassnames = (clickIndex, strCurrentClasses,selectedMenuHasSubItems) => {\r\n    const currentClasses = strCurrentClasses ? strCurrentClasses.split(' ').filter(x => x !== '') : '';\r\n    let nextClasses = '';\r\n    if (!selectedMenuHasSubItems) {\r\n        if (currentClasses.includes(\"menu-default\") && (clickIndex % 4 === 0 || clickIndex % 4 === 3)) {\r\n          clickIndex=1;\r\n        }\r\n        if (currentClasses.includes(\"menu-sub-hidden\") && (clickIndex % 4 === 2)) {\r\n          clickIndex=0;\r\n        }\r\n        if (currentClasses.includes(\"menu-hidden\") && (clickIndex % 4 === 2 || clickIndex % 4 === 3 )) {\r\n            clickIndex=0;\r\n          }\r\n\r\n      }\r\n\r\n\r\n\r\n    if (clickIndex % 4 === 0) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden';\r\n        }\r\n        clickIndex = 0;\r\n    } else if (clickIndex % 4 === 1) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 2) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default main-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-hidden';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary sub-show-temporary';\r\n        }\r\n    } else if (clickIndex % 4 === 3) {\r\n        if (currentClasses.includes('menu-default') && currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-default menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-default')) {\r\n            nextClasses = 'menu-default sub-hidden';\r\n        } else if (currentClasses.includes('menu-sub-hidden')) {\r\n            nextClasses = 'menu-sub-hidden sub-show-temporary';\r\n        } else if (currentClasses.includes('menu-hidden')) {\r\n            nextClasses = 'menu-hidden main-show-temporary';\r\n        }\r\n    }\r\n    if (currentClasses.includes('menu-mobile')) {\r\n        nextClasses += ' menu-mobile';\r\n    }\r\n    return (\r\n        {\r\n            type: MENU_SET_CLASSNAMES,\r\n            payload: { containerClassnames: nextClasses, menuClickCount: clickIndex }\r\n        }\r\n    )\r\n}","import {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\n\r\nexport const changeLocale = (locale) => {\r\n    localStorage.setItem('currentLanguage', locale);\r\n    return (\r\n        {\r\n            type: CHANGE_LOCALE,\r\n            payload: locale\r\n        }\r\n    )\r\n}\r\n\r\n","/* SETTINGS */\r\nexport const CHANGE_LOCALE = \"CHANGE_LOCALE\";\r\n\r\n/* AUTH */\r\nexport const LOGIN_USER = \"LOGIN_USER\";\r\nexport const LOGIN_USER_SUCCESS = \"LOGIN_USER_SUCCESS\";\r\nexport const LOGIN_USER_ERROR = \"LOGIN_USER_ERROR\";\r\nexport const REGISTER_USER = \"REGISTER_USER\";\r\nexport const REGISTER_USER_SUCCESS = \"REGISTER_USER_SUCCESS\";\r\nexport const REGISTER_USER_ERROR = \"REGISTER_USER_ERROR\";\r\nexport const LOGOUT_USER = \"LOGOUT_USER\";\r\nexport const FORGOT_PASSWORD = \"FORGOT_PASSWORD\";\r\nexport const FORGOT_PASSWORD_SUCCESS = \"FORGOT_PASSWORD_SUCCESS\";\r\nexport const FORGOT_PASSWORD_ERROR = \"FORGOT_PASSWORD_ERROR\";\r\nexport const RESET_PASSWORD = \"RESET_PASSWORD\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_ERROR = \"RESET_PASSWORD_ERROR\";\r\n\r\n/* MENU */\r\nexport const MENU_SET_CLASSNAMES = \"MENU_SET_CLASSNAMES\";\r\nexport const MENU_CONTAINER_ADD_CLASSNAME = \"MENU_CONTAINER_ADD_CLASSNAME\";\r\nexport const MENU_CLICK_MOBILE_MENU = \"MENU_CLICK_MOBILE_MENU\";\r\nexport const MENU_CHANGE_DEFAULT_CLASSES = \"MENU_CHANGE_DEFAULT_CLASSES\";\r\nexport const MENU_CHANGE_HAS_SUB_ITEM_STATUS =\r\n  \"MENU_CHANGE_HAS_SUB_ITEM_STATUS\";\r\n\r\n/* TODOAPP*/\r\nexport const TODO_GET_LIST = \"TODO_GET_LIST\";\r\nexport const TODO_GET_LIST_SUCCESS = \"TODO_GET_LIST_SUCCESS\";\r\nexport const TODO_GET_LIST_ERROR = \"TODO_GET_LIST_ERROR\";\r\nexport const TODO_GET_LIST_WITH_FILTER = \"TODO_GET_LIST_WITH_FILTER\";\r\nexport const TODO_GET_LIST_WITH_ORDER = \"TODO_GET_LIST_WITH_ORDER\";\r\nexport const TODO_GET_LIST_SEARCH = \"TODO_GET_LIST_SEARCH\";\r\nexport const TODO_ADD_ITEM = \"TODO_ADD_ITEM\";\r\nexport const TODO_ADD_ITEM_SUCCESS = \"TODO_ADD_ITEM_SUCCESS\";\r\nexport const TODO_ADD_ITEM_ERROR = \"TODO_ADD_ITEM_ERROR\";\r\nexport const TODO_SELECTED_ITEMS_CHANGE = \"TODO_SELECTED_ITEMS_CHANGE\";\r\n\r\n/* CHAT APP*/\r\nexport const CHAT_GET_CONTACTS = \"CHAT_GET_CONTACTS\";\r\nexport const CHAT_GET_CONTACTS_SUCCESS = \"CHAT_GET_CONTACTS_SUCCESS\";\r\nexport const CHAT_GET_CONTACTS_ERROR = \"CHAT_GET_CONTACTS_ERROR\";\r\nexport const CHAT_GET_CONVERSATIONS = \"CHAT_GET_CONVERSATIONS\";\r\nexport const CHAT_GET_CONVERSATIONS_SUCCESS = \"CHAT_GET_CONVERSATIONS_SUCCESS\";\r\nexport const CHAT_GET_CONVERSATIONS_ERROR = \"CHAT_GET_CONVERSATIONS_ERROR\";\r\nexport const CHAT_ADD_MESSAGE_TO_CONVERSATION =\r\n  \"CHAT_ADD_MESSAGE_TO_CONVERSATION\";\r\nexport const CHAT_CREATE_CONVERSATION = \"CHAT_CREATE_CONVERSATION\";\r\nexport const CHAT_SEARCH_CONTACT = \"CHAT_SEARCH_CONTACT\";\r\nexport const CHAT_CHANGE_CONVERSATION = \"CHAT_CHANGE_CONVERSATION\";\r\n\r\n/* SURVEY LIST APP*/\r\nexport const SURVEY_LIST_GET_LIST = \"SURVEY_LIST_GET_LIST\";\r\nexport const SURVEY_LIST_GET_LIST_SUCCESS = \"SURVEY_LIST_GET_LIST_SUCCESS\";\r\nexport const SURVEY_LIST_GET_LIST_ERROR = \"SURVEY_LIST_GET_LIST_ERROR\";\r\nexport const SURVEY_LIST_GET_LIST_WITH_FILTER =\r\n  \"SURVEY_LIST_GET_LIST_WITH_FILTER\";\r\nexport const SURVEY_LIST_GET_LIST_WITH_ORDER =\r\n  \"SURVEY_LIST_GET_LIST_WITH_ORDER\";\r\nexport const SURVEY_LIST_GET_LIST_SEARCH = \"SURVEY_LIST_GET_LIST_SEARCH\";\r\nexport const SURVEY_LIST_ADD_ITEM = \"SURVEY_LIST_ADD_ITEM\";\r\nexport const SURVEY_LIST_ADD_ITEM_SUCCESS = \"SURVEY_LIST_ADD_ITEM_SUCCESS\";\r\nexport const SURVEY_LIST_ADD_ITEM_ERROR = \"SURVEY_LIST_ADD_ITEM_ERROR\";\r\nexport const SURVEY_LIST_SELECTED_ITEMS_CHANGE =\r\n  \"SURVEY_LIST_SELECTED_ITEMS_CHANGE\";\r\n\r\n/* SURVEY DETAIL APP*/\r\nexport const SURVEY_GET_DETAILS = \"SURVEY_GET_DETAILS\";\r\nexport const SURVEY_GET_DETAILS_SUCCESS = \"SURVEY_GET_DETAILS_SUCCESS\";\r\nexport const SURVEY_GET_DETAILS_ERROR = \"SURVEY_GET_DETAILS_ERROR\";\r\nexport const SURVEY_DELETE_QUESTION = \"SURVEY_DELETE_QUESTION\";\r\nexport const SURVEY_SAVE = \"SURVEY_SAVE\";\r\n\r\nexport * from \"./menu/actions\";\r\nexport * from \"./settings/actions\";\r\nexport * from \"./auth/actions\";\r\nexport * from \"./todo/actions\";\r\nexport * from \"./chat/actions\";\r\nexport * from \"./surveyList/actions\";\r\nexport * from \"./surveyDetail/actions\";\r\n","import {reactLocalStorage} from 'reactjs-localstorage';\r\n\r\nexport const defaultMenuType = \"menu-default\";\r\n\r\nexport const subHiddenBreakpoint = 1440;\r\nexport const menuHiddenBreakpoint = 768;\r\nexport const defaultLocale = \"en\";\r\nexport const localeOptions = [\r\n  { id: \"en\", name: \"English - LTR\", direction: \"ltr\" },\r\n  { id: \"es\", name: \"Español\", direction: \"ltr\" },\r\n  { id: \"enrtl\", name: \"English - RTL\", direction: \"rtl\" }\r\n];\r\n\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyBBksq-Asxq2M4Ot-75X19IyrEYJqNBPcg\",\r\n  authDomain: \"gogo-react-login.firebaseapp.com\",\r\n  databaseURL: \"https://gogo-react-login.firebaseio.com\",\r\n  projectId: \"gogo-react-login\",\r\n  storageBucket: \"gogo-react-login.appspot.com\",\r\n  messagingSenderId: \"216495999563\"\r\n};\r\n\r\nexport const searchPath = \"/app/pages/search\";\r\nexport const servicePath = \"http://ams-aaz-backend.herokuapp.com\";\r\nexport const me = reactLocalStorage.getObject('me');\r\nexport const isSuccesSubmit = reactLocalStorage.get('isSuccesSubmit') || false;\r\nexport const token = reactLocalStorage.get('token');\r\n\r\nexport const themeColorStorageKey=\"__theme_color\"\r\nexport const isMultiColorActive = false;\r\nexport const isDarkSwitchActive = false;\r\nexport const defaultColor = \"light.blue\";\r\nexport const defaultDirection = \"ltr\";\r\nexport const themeRadiusStorageKey = \"__theme_radius\";\r\nexport const isDemo = false;\r\n","import {\r\n  LOGIN_USER,\r\n  LOGIN_USER_SUCCESS,\r\n  LOGOUT_USER,\r\n  REGISTER_USER,\r\n  REGISTER_USER_SUCCESS,\r\n  LOGIN_USER_ERROR,\r\n  REGISTER_USER_ERROR,\r\n  FORGOT_PASSWORD,\r\n  FORGOT_PASSWORD_SUCCESS,\r\n  FORGOT_PASSWORD_ERROR,\r\n  RESET_PASSWORD,\r\n  RESET_PASSWORD_SUCCESS,\r\n  RESET_PASSWORD_ERROR\r\n} from '../actions';\r\n\r\nexport const loginUser = (user, history) => ({\r\n  type: LOGIN_USER,\r\n  payload: { user, history }\r\n});\r\nexport const loginUserSuccess = (user) => ({\r\n  type: LOGIN_USER_SUCCESS,\r\n  payload: user\r\n});\r\nexport const loginUserError = (message) => ({\r\n  type: LOGIN_USER_ERROR,\r\n  payload: { message }\r\n});\r\n\r\nexport const forgotPassword = (forgotUserMail, history) => ({\r\n  type: FORGOT_PASSWORD,\r\n  payload: { forgotUserMail, history }\r\n});\r\nexport const forgotPasswordSuccess = (forgotUserMail) => ({\r\n  type: FORGOT_PASSWORD_SUCCESS,\r\n  payload: forgotUserMail\r\n});\r\nexport const forgotPasswordError = (message) => ({\r\n  type: FORGOT_PASSWORD_ERROR,\r\n  payload: { message }\r\n});\r\n\r\nexport const resetPassword = ({resetPasswordCode,newPassword,history}) => ({\r\n  type: RESET_PASSWORD,\r\n  payload: { resetPasswordCode,newPassword,history }\r\n});\r\nexport const resetPasswordSuccess = (newPassword) => ({\r\n  type: RESET_PASSWORD_SUCCESS,\r\n  payload: newPassword\r\n});\r\nexport const resetPasswordError = (message) => ({\r\n  type: RESET_PASSWORD_ERROR,\r\n  payload: { message }\r\n});\r\n\r\n\r\n\r\nexport const registerUser = (user, history) => ({\r\n  type: REGISTER_USER,\r\n  payload: { user, history }\r\n})\r\nexport const registerUserSuccess = (user) => ({\r\n  type: REGISTER_USER_SUCCESS,\r\n  payload: user\r\n})\r\nexport const registerUserError = (message) => ({\r\n  type: REGISTER_USER_ERROR,\r\n  payload: { message }\r\n})\r\n\r\nexport const logoutUser = (history) => ({\r\n  type: LOGOUT_USER,\r\n  payload: { history }\r\n});","import {\r\n    CHAT_GET_CONTACTS,\r\n    CHAT_GET_CONTACTS_SUCCESS,\r\n    CHAT_GET_CONTACTS_ERROR,\r\n    CHAT_GET_CONVERSATIONS,\r\n    CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    CHAT_GET_CONVERSATIONS_ERROR,\r\n    CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    CHAT_CREATE_CONVERSATION,\r\n    CHAT_SEARCH_CONTACT,\r\n    CHAT_CHANGE_CONVERSATION\r\n} from '../actions';\r\n\r\n\r\nexport const getContacts = () => ({\r\n    type: CHAT_GET_CONTACTS\r\n});\r\n\r\nexport const getContactsSuccess = (contacts, currentUser) => {\r\n    return ({\r\n        type: CHAT_GET_CONTACTS_SUCCESS,\r\n        payload: { contacts, currentUser }\r\n    })\r\n};\r\n\r\nexport const getContactsError = (error) => ({\r\n    type: CHAT_GET_CONTACTS_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getConversations = (userId) => ({\r\n    type: CHAT_GET_CONVERSATIONS,\r\n    payload:  userId \r\n});\r\nexport const getConversationsSuccess = (conversations, selectedUser) => ({\r\n    type: CHAT_GET_CONVERSATIONS_SUCCESS,\r\n    payload: { conversations, selectedUser }\r\n});\r\n\r\nexport const getConversationsError = (error) => ({\r\n    type: CHAT_GET_CONVERSATIONS_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const addMessageToConversation = (currentUserId,selectedUserId,message,allConversations) => ({\r\n    type: CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n    payload: {currentUserId,selectedUserId,message,allConversations}\r\n});\r\n\r\nexport const createConversation = (currentUserId,selectedUserId,allConversations) => {\r\n    return ({\r\n        type: CHAT_CREATE_CONVERSATION,\r\n        payload: {currentUserId,selectedUserId,allConversations}\r\n    })\r\n};\r\n\r\nexport const searchContact = (keyword) => ({\r\n    type: CHAT_SEARCH_CONTACT,\r\n    payload: keyword\r\n});\r\n\r\nexport const changeConversation = (userId) => ({\r\n    type: CHAT_CHANGE_CONVERSATION,\r\n    payload: userId\r\n});\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport {defaultLocale,localeOptions} from '../../constants/defaultValues'\r\n\r\nimport {\r\n    CHANGE_LOCALE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tlocale: (localStorage.getItem('currentLanguage') && localeOptions.filter(x=>x.id===localStorage.getItem('currentLanguage')).length>0) ? localStorage.getItem('currentLanguage') : defaultLocale,\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase CHANGE_LOCALE:\r\n\t\treturn { ...state, locale:action.payload};\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}","import {\r\n\r\n\tMENU_SET_CLASSNAMES,\r\n\tMENU_CONTAINER_ADD_CLASSNAME,\r\n\tMENU_CLICK_MOBILE_MENU,\r\n\tMENU_CHANGE_DEFAULT_CLASSES,\r\n\tMENU_CHANGE_HAS_SUB_ITEM_STATUS\r\n} from '../actions';\r\n\r\nimport {defaultMenuType,  subHiddenBreakpoint, menuHiddenBreakpoint } from '../../constants/defaultValues'\r\n\r\n\r\nconst INIT_STATE = {\r\n\tcontainerClassnames: defaultMenuType,\r\n\tsubHiddenBreakpoint,\r\n\tmenuHiddenBreakpoint,\r\n\tmenuClickCount: 0,\r\n\tselectedMenuHasSubItems: defaultMenuType===\"menu-default\" //if you use menu-sub-hidden as default menu type, set value of this variable to false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase MENU_CHANGE_HAS_SUB_ITEM_STATUS:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tselectedMenuHasSubItems: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_SET_CLASSNAMES:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CLICK_MOBILE_MENU:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload.containerClassnames,\r\n\t\t\tmenuClickCount:action.payload.menuClickCount\r\n\t\t})\r\n\r\n\t\tcase MENU_CONTAINER_ADD_CLASSNAME:\r\n\t\treturn Object.assign({}, state, {\r\n\t\t\tcontainerClassnames: action.payload\r\n\t\t})\r\n\r\n\t\tcase MENU_CHANGE_DEFAULT_CLASSES:\r\n\t\t\treturn Object.assign({}, state, {\r\n\t\t\t\tcontainerClassnames: action.payload\r\n\t\t\t})\r\n\t\t\t\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n    LOGIN_USER,\r\n    LOGIN_USER_SUCCESS,\r\n    LOGIN_USER_ERROR,\r\n    REGISTER_USER,\r\n    REGISTER_USER_SUCCESS,\r\n    REGISTER_USER_ERROR,\r\n    LOGOUT_USER,\r\n    FORGOT_PASSWORD,\r\n    FORGOT_PASSWORD_SUCCESS,\r\n    FORGOT_PASSWORD_ERROR,\r\n    RESET_PASSWORD,\r\n    RESET_PASSWORD_SUCCESS,\r\n    RESET_PASSWORD_ERROR\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n    user: localStorage.getItem('user_id'),\r\n    forgotUserMail: '',\r\n    newPassword: '',\r\n    resetPasswordCode: '',\r\n    loading: false,\r\n    error: ''\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER:\r\n            return { ...state, loading: true, error: '' };\r\n        case LOGIN_USER_SUCCESS:\r\n            return { ...state, loading: false, user: action.payload.uid, error: '' };\r\n        case LOGIN_USER_ERROR:\r\n            return { ...state, loading: false, user: '', error: action.payload.message };\r\n        case FORGOT_PASSWORD:\r\n            return { ...state, loading: true, error: '' };\r\n        case FORGOT_PASSWORD_SUCCESS:\r\n            return { ...state, loading: false, forgotUserMail: action.payload, error: '' };\r\n        case FORGOT_PASSWORD_ERROR:\r\n            return { ...state, loading: false, forgotUserMail: '', error: action.payload.message };\r\n        case RESET_PASSWORD:\r\n            return { ...state, loading: true, error: '' };\r\n        case RESET_PASSWORD_SUCCESS:\r\n            return { ...state, loading: false, newPassword: action.payload, resetPasswordCode: '', error: '' };\r\n        case RESET_PASSWORD_ERROR:\r\n            return { ...state, loading: false, newPassword: '', resetPasswordCode: '', error: action.payload.message };\r\n        case REGISTER_USER:\r\n            return { ...state, loading: true, error: '' };\r\n        case REGISTER_USER_SUCCESS:\r\n            return { ...state, loading: false, user: action.payload.uid, error: '' };\r\n        case REGISTER_USER_ERROR:\r\n            return { ...state, loading: false, user: '', error: action.payload.message };\r\n        case LOGOUT_USER:\r\n            return { ...state, user: null, error: '' };\r\n        default: return { ...state };\r\n    }\r\n}\r\n","import {\r\n\tTODO_GET_LIST,\r\n\tTODO_GET_LIST_SUCCESS,\r\n\tTODO_GET_LIST_ERROR,\r\n\tTODO_GET_LIST_WITH_FILTER,\r\n\tTODO_GET_LIST_WITH_ORDER,\r\n\tTODO_GET_LIST_SEARCH,\r\n\tTODO_ADD_ITEM,\r\n\tTODO_ADD_ITEM_SUCCESS,\r\n\tTODO_ADD_ITEM_ERROR,\r\n\tTODO_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallTodoItems: null,\r\n\ttodoItems: null,\r\n\terror: '',\r\n\tfilter: null,\r\n\tsearchKeyword: '',\r\n\torderColumn: null,\r\n\tloading: false,\r\n\tlabels: [\r\n\t\t{ label: \"EDUCATION\", color: \"secondary\" },\r\n\t\t{ label: \"NEW FRAMEWORK\", color: \"primary\" },\r\n\t\t{ label: \"PERSONAL\", color: \"info\" }\r\n\t],\r\n\torderColumns: [\r\n\t\t{ column: \"title\", label: \"Title\" },\r\n\t\t{ column: \"category\", label: \"Category\" },\r\n\t\t{ column: \"status\", label: \"Status\" },\r\n\t\t{ column: \"label\", label: \"Label\" },\r\n\t],\r\n\tcategories: [\"Flexbox\", \"Sass\", \"React\"],\r\n\tselectedItems: []\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase TODO_GET_LIST:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase TODO_GET_LIST_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allTodoItems: action.payload, todoItems: action.payload };\r\n\r\n\t\tcase TODO_GET_LIST_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase TODO_GET_LIST_WITH_FILTER:\r\n\t\t\tif (action.payload.column === '' || action.payload.value === '') {\r\n\t\t\t\treturn { ...state, loading: true, todoItems: state.allTodoItems, filter: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst filteredItems = state.allTodoItems.filter((item) =>\r\n\t\t\t\t\titem[action.payload.column] === action.payload.value);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state, loading: true, todoItems: filteredItems, filter: {\r\n\t\t\t\t\t\tcolumn: action.payload.column,\r\n\t\t\t\t\t\tvalue: action.payload.value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcase TODO_GET_LIST_WITH_ORDER:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, loading: true, todoItems: state.todoItems, orderColumn: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst sortedItems = state.todoItems.sort((a, b) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ta[action.payload] <\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ta[action.payload] >\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\t\t\t\treturn { ...state, loading: true, todoItems: sortedItems, orderColumn: state.orderColumns.find(x => x.column === action.payload) }\r\n\t\t\t}\r\n\r\n\t\tcase TODO_GET_LIST_SEARCH:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, todoItems: state.allTodoItems };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchItems = state.allTodoItems.filter((item) =>\r\n\t\t\t\t\titem.title.toLowerCase().indexOf(keyword) > -1 || item.detail.toLowerCase().indexOf(keyword) > -1 || item.status.toLowerCase().indexOf(keyword) > -1 || item.category.toLowerCase().indexOf(keyword) > -1 || item.label.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, loading: true, todoItems: searchItems, searchKeyword: action.payload }\r\n\t\t\t}\r\n\r\n\t\tcase TODO_ADD_ITEM:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase TODO_ADD_ITEM_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allTodoItems: action.payload, todoItems: action.payload };\r\n\r\n\t\tcase TODO_ADD_ITEM_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase TODO_SELECTED_ITEMS_CHANGE:\r\n\t\t\treturn { ...state, loading: true, selectedItems: action.payload};\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n\tCHAT_GET_CONTACTS,\r\n\tCHAT_GET_CONTACTS_SUCCESS,\r\n\tCHAT_GET_CONTACTS_ERROR,\r\n\tCHAT_GET_CONVERSATIONS,\r\n\tCHAT_GET_CONVERSATIONS_SUCCESS,\r\n\tCHAT_GET_CONVERSATIONS_ERROR,\r\n\tCHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n\tCHAT_CREATE_CONVERSATION,\r\n\tCHAT_SEARCH_CONTACT,\r\n\tCHAT_CHANGE_CONVERSATION\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallContacts: null,\r\n\tcontacts: null,\r\n\tconversations: null,\r\n\terror: '',\r\n\tsearchKeyword: '',\r\n\tloadingContacts: false,\r\n\tloadingConversations: false,\r\n\tcurrentUser: null,\r\n\tselectedUser: null,\r\n\tselectedUserId: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase CHAT_GET_CONTACTS:\r\n\t\t\treturn { ...state, loadingContacts: false };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_SUCCESS:\r\n\t\t\treturn { ...state, loadingContacts: true, allContacts: action.payload.contacts, contacts: action.payload.contacts, currentUser: action.payload.currentUser };\r\n\r\n\t\tcase CHAT_GET_CONTACTS_ERROR:\r\n\t\t\treturn { ...state, loadingContacts: false, error: action.payload };\r\n\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS:\r\n\t\t\treturn { ...state, loadingConversations: false };\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_SUCCESS:\r\n\t\t\treturn { ...state, \r\n\t\t\t\tloadingConversations: true, \r\n\t\t\t\tconversations: action.payload.conversations, \r\n\t\t\t\tselectedUserId:  action.payload.selectedUser \r\n\t\t\t};\r\n\r\n\t\tcase CHAT_GET_CONVERSATIONS_ERROR:\r\n\t\t\treturn { ...state, loadingConversations: false, error: action.payload };\r\n\r\n\t\tcase CHAT_CHANGE_CONVERSATION:\r\n\t\t\treturn { ...state, selectedUser: state.allContacts.find(x => x.id === action.payload) };\r\n\r\n\r\n\t\tcase CHAT_ADD_MESSAGE_TO_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_CREATE_CONVERSATION:\r\n\t\t\treturn { ...state };\r\n\r\n\t\tcase CHAT_SEARCH_CONTACT:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, contacts: state.allContacts };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchedContacts = state.allContacts.filter((item) => item.name.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, contacts: searchedContacts }\r\n\t\t\t}\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n\tSURVEY_LIST_GET_LIST,\r\n\tSURVEY_LIST_GET_LIST_SUCCESS,\r\n\tSURVEY_LIST_GET_LIST_ERROR,\r\n\tSURVEY_LIST_GET_LIST_WITH_FILTER,\r\n\tSURVEY_LIST_GET_LIST_WITH_ORDER,\r\n\tSURVEY_LIST_GET_LIST_SEARCH,\r\n\tSURVEY_LIST_ADD_ITEM,\r\n\tSURVEY_LIST_ADD_ITEM_SUCCESS,\r\n\tSURVEY_LIST_ADD_ITEM_ERROR,\r\n\tSURVEY_LIST_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tallSurveyItems: null,\r\n\tsurveyItems: null,\r\n\terror: '',\r\n\tfilter: null,\r\n\tsearchKeyword: '',\r\n\torderColumn: null,\r\n\tloading: false,\r\n\tlabels: [\r\n\t\t{ label: \"EDUCATION\", color: \"secondary\" },\r\n\t\t{ label: \"NEW FRAMEWORK\", color: \"primary\" },\r\n\t\t{ label: \"PERSONAL\", color: \"info\" }\r\n\t],\r\n\torderColumns: [\r\n\t\t{ column: \"title\", label: \"Title\" },\r\n\t\t{ column: \"category\", label: \"Category\" },\r\n\t\t{ column: \"status\", label: \"Status\" },\r\n\t\t{ column: \"label\", label: \"Label\" },\r\n\t],\r\n\tcategories: [\"Development\", \"Worklplace\", \"Hardware\"],\r\n\tselectedItems: []\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allSurveyItems: action.payload, surveyItems: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_WITH_FILTER:\r\n\t\t\tif (action.payload.column === '' || action.payload.value === '') {\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: state.allSurveyItems, filter: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst filteredItems = state.allSurveyItems.filter((item) =>\r\n\t\t\t\t\titem[action.payload.column] === action.payload.value);\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...state, loading: true, surveyItems: filteredItems, filter: {\r\n\t\t\t\t\t\tcolumn: action.payload.column,\r\n\t\t\t\t\t\tvalue: action.payload.value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_WITH_ORDER:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: state.surveyItems, orderColumn: null };\r\n\t\t\t} else {\r\n\t\t\t\tconst sortedItems = state.surveyItems.sort((a, b) => {\r\n\t\t\t\t\tif (\r\n\t\t\t\t\t\ta[action.payload] <\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\telse if (\r\n\t\t\t\t\t\ta[action.payload] >\r\n\t\t\t\t\t\tb[action.payload]\r\n\t\t\t\t\t)\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\treturn 0;\r\n\t\t\t\t})\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: sortedItems, orderColumn: state.orderColumns.find(x => x.column === action.payload) }\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_GET_LIST_SEARCH:\r\n\t\t\tif (action.payload === '') {\r\n\t\t\t\treturn { ...state, surveyItems: state.allSurveyItems };\r\n\t\t\t} else {\r\n\t\t\t\tconst keyword = action.payload.toLowerCase();\r\n\t\t\t\tconst searchItems = state.allSurveyItems.filter((item) =>\r\n\t\t\t\t\titem.title.toLowerCase().indexOf(keyword) > -1 || item.detail.toLowerCase().indexOf(keyword) > -1 || item.status.toLowerCase().indexOf(keyword) > -1 || item.category.toLowerCase().indexOf(keyword) > -1 || item.label.toLowerCase().indexOf(keyword) > -1);\r\n\t\t\t\treturn { ...state, loading: true, surveyItems: searchItems, searchKeyword: action.payload }\r\n\t\t\t}\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, allSurveyItems: action.payload, surveyItems: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_ADD_ITEM_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\tcase SURVEY_LIST_SELECTED_ITEMS_CHANGE:\r\n\t\t\treturn { ...state, loading: true, selectedItems: action.payload};\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import {\r\n    SURVEY_GET_DETAILS,\r\n    SURVEY_GET_DETAILS_SUCCESS,\r\n\tSURVEY_GET_DETAILS_ERROR,\r\n\tSURVEY_DELETE_QUESTION,\r\n    SURVEY_SAVE\r\n} from '../actions';\r\n\r\nconst INIT_STATE = {\r\n\tsurvey:null,\r\n\tloading:false\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n\tswitch (action.type) {\r\n\r\n\t\tcase SURVEY_GET_DETAILS:\r\n\t\t\treturn { ...state, loading: false };\r\n\r\n\t\tcase SURVEY_GET_DETAILS_SUCCESS:\r\n\t\t\treturn { ...state, loading: true, survey: action.payload};\r\n\r\n\t\tcase SURVEY_GET_DETAILS_ERROR:\r\n\t\t\treturn { ...state, loading: true, error: action.payload };\r\n\r\n\t\t\tcase SURVEY_DELETE_QUESTION:\r\n\t\t\treturn { ...state,loading:false};\r\n\r\n\t\t\tcase SURVEY_SAVE:\r\n\t\t\treturn { ...state,loading:true,survey: action.payload};\r\n\t\t\t\r\n\r\n\r\n\t\tdefault: return { ...state };\r\n\t}\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport settings from './settings/reducer';\r\nimport menu from './menu/reducer';\r\nimport authUser from './auth/reducer';\r\nimport todoApp from './todo/reducer';\r\nimport chatApp from './chat/reducer';\r\nimport surveyListApp from './surveyList/reducer';\r\nimport surveyDetailApp from './surveyDetail/reducer';\r\n\r\nconst reducers = combineReducers({\r\n  menu,\r\n  settings,\r\n  authUser,\r\n  todoApp,\r\n  chatApp,\r\n  surveyListApp,\r\n  surveyDetailApp\r\n});\r\n\r\nexport default reducers;","\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\nimport { auth } from '../../helpers/Firebase';\r\nimport {\r\n    LOGIN_USER,\r\n    REGISTER_USER,\r\n    LOGOUT_USER,\r\n    FORGOT_PASSWORD,\r\n    RESET_PASSWORD,\r\n} from '../actions';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserError,\r\n    registerUserSuccess,\r\n    registerUserError,\r\n    forgotPasswordSuccess,\r\n    forgotPasswordError,\r\n    resetPasswordSuccess,\r\n    resetPasswordError\r\n} from './actions';\r\n\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, loginWithEmailPassword);\r\n}\r\n\r\nconst loginWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.signInWithEmailAndPassword(email, password)\r\n        .then(authUser => {\r\n            console.log(authUser);\r\n            return authUser;\r\n        })\r\n        .catch(error => error);\r\n\r\n\r\n\r\nfunction* loginWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload;\r\n    try {\r\n        const loginUser = yield call(loginWithEmailPasswordAsync, email, password);\r\n        if (!loginUser.message) {\r\n            localStorage.setItem('user_id', loginUser.user.uid);\r\n            yield put(loginUserSuccess(loginUser.user));\r\n            history.push('/');\r\n        } else {\r\n            yield put(loginUserError(loginUser.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(loginUserError(error));\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, registerWithEmailPassword);\r\n}\r\n\r\nconst registerWithEmailPasswordAsync = async (email, password) =>\r\n    await auth.createUserWithEmailAndPassword(email, password)\r\n        .then(authUser => authUser)\r\n        .catch(error => error);\r\n\r\nfunction* registerWithEmailPassword({ payload }) {\r\n    const { email, password } = payload.user;\r\n    const { history } = payload\r\n    try {\r\n        const registerUser = yield call(registerWithEmailPasswordAsync, email, password);\r\n        if (!registerUser.message) {\r\n            localStorage.setItem('user_id', registerUser.user.uid);\r\n            yield put(registerUserSuccess(registerUser));\r\n            history.push('/')\r\n        } else {\r\n            yield put(registerUserError(registerUser.message));\r\n\r\n        }\r\n    } catch (error) {\r\n        yield put(registerUserError(error));\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nconst logoutAsync = async (history) => {\r\n    await auth.signOut().then(authUser => authUser).catch(error => error);\r\n    history.push('/')\r\n}\r\n\r\nfunction* logout({ payload }) {\r\n    const { history } = payload\r\n    try {\r\n        yield call(logoutAsync, history);\r\n        localStorage.removeItem('user_id');\r\n    } catch (error) {\r\n    }\r\n}\r\n\r\nexport function* watchForgotPassword() {\r\n    yield takeEvery(FORGOT_PASSWORD, forgotPassword);\r\n}\r\n\r\nconst forgotPasswordAsync = async (email) => {\r\n    return await auth.sendPasswordResetEmail(email)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* forgotPassword({ payload }) {\r\n    const { email } = payload.forgotUserMail;\r\n    try {\r\n        const forgotPasswordStatus = yield call(forgotPasswordAsync, email);\r\n        if (!forgotPasswordStatus) {\r\n            yield put(forgotPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(forgotPasswordError(forgotPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(forgotPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport function* watchResetPassword() {\r\n    yield takeEvery(RESET_PASSWORD, resetPassword);\r\n}\r\n\r\nconst resetPasswordAsync = async (resetPasswordCode, newPassword) => {\r\n    return await auth.confirmPasswordReset(resetPasswordCode, newPassword)\r\n        .then(user => user)\r\n        .catch(error => error);\r\n}\r\n\r\nfunction* resetPassword({ payload }) {\r\n    const { newPassword, resetPasswordCode } = payload;\r\n    try {\r\n        const resetPasswordStatus = yield call(resetPasswordAsync, resetPasswordCode, newPassword);\r\n        if (!resetPasswordStatus) {\r\n            yield put(resetPasswordSuccess(\"success\"));\r\n        } else {\r\n            yield put(resetPasswordError(resetPasswordStatus.message));\r\n        }\r\n    } catch (error) {\r\n        yield put(resetPasswordError(error));\r\n\r\n    }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        fork(watchLoginUser),\r\n        fork(watchLogoutUser),\r\n        fork(watchRegisterUser),\r\n        fork(watchForgotPassword),\r\n        fork(watchResetPassword),\r\n    ]);\r\n}","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getDateWithFormat } from \"../../helpers/Utils\";\r\n\r\nimport { TODO_GET_LIST, TODO_ADD_ITEM } from \"../actions\";\r\n\r\nimport {\r\n  getTodoListSuccess,\r\n  getTodoListError,\r\n  addTodoItemSuccess,\r\n  addTodoItemError\r\n} from \"./actions\";\r\n\r\nimport todoData from \"../../data/todos.json\";\r\n\r\nconst getTodoListRequest = async () => {\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(todoData.data);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* getTodoListItems() {\r\n  try {\r\n    const response = yield call(getTodoListRequest);\r\n    yield put(getTodoListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getTodoListError(error));\r\n  }\r\n}\r\n\r\nconst addTodoItemRequest = async item => {\r\n  let items = todoData.data;\r\n  item.id = items.length + 1;\r\n  item.createDate = getDateWithFormat();\r\n  items.splice(0, 0, item);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(items);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addTodoItem({ payload }) {\r\n  try {\r\n    const response = yield call(addTodoItemRequest, payload);\r\n    yield put(addTodoItemSuccess(response));\r\n  } catch (error) {\r\n    yield put(addTodoItemError(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(TODO_GET_LIST, getTodoListItems);\r\n}\r\n\r\nexport function* wathcAddItem() {\r\n  yield takeEvery(TODO_ADD_ITEM, addTodoItem);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchGetList), fork(wathcAddItem)]);\r\n}\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getCurrentTime } from \"../../helpers/Utils\";\r\n\r\nimport {\r\n  CHAT_GET_CONTACTS,\r\n  CHAT_GET_CONVERSATIONS,\r\n  CHAT_ADD_MESSAGE_TO_CONVERSATION,\r\n  CHAT_CREATE_CONVERSATION\r\n} from \"../actions\";\r\n\r\nimport {\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  getConversationsSuccess,\r\n  getConversationsError\r\n} from \"./actions\";\r\n\r\nimport contactsData from \"../../data/chat.contacts.json\";\r\nimport conversationsData from \"../../data/chat.conversations.json\";\r\n\r\nfunction* loadContacts() {\r\n  try {\r\n    const response = yield call(loadContactsAsync);\r\n    const { contacts, currentUser } = response;\r\n    yield put(getContactsSuccess(contacts, currentUser));\r\n  } catch (error) {\r\n    yield put(getContactsError(error));\r\n  }\r\n}\r\n\r\nconst loadContactsAsync = async () => {\r\n  const contacts = contactsData.data;\r\n  const currentUser = contacts[0];\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({ contacts, currentUser });\r\n    }, 2000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* loadConversations(userId) {\r\n  try {\r\n    const response = yield call(loadConversationsAsync, userId);\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst loadConversationsAsync = async ({ payload }) => {\r\n  let conversations = conversationsData.data;\r\n  conversations = conversations.filter(x => x.users.includes(payload));\r\n  const selectedUser = conversations[0].users.find(x => x !== payload);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({ conversations, selectedUser });\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addMessageToConversation({ payload }) {\r\n  try {\r\n    const {\r\n      currentUserId,\r\n      selectedUserId,\r\n      message,\r\n      allConversations\r\n    } = payload;\r\n\r\n    const response = yield call(\r\n      addMessageToConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      message,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\nconst addMessageToConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  message,\r\n  allConversations\r\n) => {\r\n  let conversation = allConversations.find(\r\n    x => x.users.includes(currentUserId) && x.users.includes(selectedUserId)\r\n  );\r\n  const time = getCurrentTime();\r\n  if (conversation) {\r\n    conversation.messages.push({\r\n      sender: currentUserId,\r\n      time: time,\r\n      text: message\r\n    });\r\n    conversation.lastMessageTime = time;\r\n    let conversations = allConversations.filter(x => x.id !== conversation.id);\r\n    conversations.splice(0, 0, conversation);\r\n\r\n    return await new Promise((success, fail) => {\r\n      setTimeout(() => {\r\n        success({ conversations, selectedUser: selectedUserId });\r\n      }, 500);\r\n    })\r\n      .then(response => response)\r\n      .catch(error => error);\r\n  }\r\n};\r\n\r\nfunction* createNewConversation({ payload }) {\r\n  try {\r\n    const { currentUserId, selectedUserId, allConversations } = payload;\r\n    const response = yield call(\r\n      createNewConversationAsync,\r\n      currentUserId,\r\n      selectedUserId,\r\n      allConversations\r\n    );\r\n    const { conversations, selectedUser } = response;\r\n    yield put(getConversationsSuccess(conversations, selectedUser));\r\n  } catch (error) {\r\n    yield put(getConversationsError(error));\r\n  }\r\n}\r\n\r\nconst createNewConversationAsync = async (\r\n  currentUserId,\r\n  selectedUserId,\r\n  allConversations\r\n) => {\r\n  let conversation = {\r\n    id: allConversations.length + 1,\r\n    users: [currentUserId, selectedUserId],\r\n    lastMessageTime: \"-\",\r\n    messages: []\r\n  };\r\n\r\n  allConversations.splice(0, 0, conversation);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success({\r\n        conversations: allConversations,\r\n        selectedUser: selectedUserId\r\n      });\r\n    }, 500);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nexport function* watchGetContact() {\r\n  yield takeEvery(CHAT_GET_CONTACTS, loadContacts);\r\n}\r\nexport function* watchGetConversation() {\r\n  yield takeEvery(CHAT_GET_CONVERSATIONS, loadConversations);\r\n}\r\nexport function* watchAddMessageToConversation() {\r\n  yield takeEvery(CHAT_ADD_MESSAGE_TO_CONVERSATION, addMessageToConversation);\r\n}\r\nexport function* watchCreateConversation() {\r\n  yield takeEvery(CHAT_CREATE_CONVERSATION, createNewConversation);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n    fork(watchGetContact),\r\n    fork(watchGetConversation),\r\n    fork(watchAddMessageToConversation),\r\n    fork(watchCreateConversation)\r\n  ]);\r\n}\r\n","import { all, call, fork, put, takeEvery } from \"redux-saga/effects\";\r\nimport { getDateWithFormat } from \"../../helpers/Utils\";\r\n\r\nimport {\r\n  SURVEY_LIST_GET_LIST,\r\n  SURVEY_LIST_ADD_ITEM\r\n} from \"../actions\";\r\n\r\nimport {\r\n  getSurveyListSuccess,\r\n  getSurveyListError,\r\n  addSurveyItemSuccess,\r\n  addSurveyItemError\r\n} from \"./actions\";\r\n\r\nimport surveyListData from \"../../data/survey.list.json\";\r\n\r\nconst getSurveyListRequest = async () => {\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(surveyListData.data);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* getSurveyListItems() {\r\n  try {\r\n    const response = yield call(getSurveyListRequest);\r\n    yield put(getSurveyListSuccess(response));\r\n  } catch (error) {\r\n    yield put(getSurveyListError(error));\r\n  }\r\n}\r\n\r\nconst addSurveyItemRequest = async item => {\r\n  let items = surveyListData.data;\r\n  item.id = items.length + 1;\r\n  item.createDate = getDateWithFormat();\r\n  items.splice(0, 0, item);\r\n  return await new Promise((success, fail) => {\r\n    setTimeout(() => {\r\n      success(items);\r\n    }, 1000);\r\n  })\r\n    .then(response => response)\r\n    .catch(error => error);\r\n};\r\n\r\nfunction* addSurveyItem({ payload }) {\r\n  try {\r\n    const response = yield call(addSurveyItemRequest, payload);\r\n    yield put(addSurveyItemSuccess(response));\r\n  } catch (error) {\r\n    yield put(addSurveyItemError(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetList() {\r\n  yield takeEvery(SURVEY_LIST_GET_LIST, getSurveyListItems);\r\n}\r\n\r\nexport function* wathcAddItem() {\r\n  yield takeEvery(SURVEY_LIST_ADD_ITEM, addSurveyItem);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchGetList), fork(wathcAddItem)]);\r\n}\r\n","\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport {\r\n\tSURVEY_GET_DETAILS,\r\n\tSURVEY_DELETE_QUESTION\r\n} from '../actions';\r\n\r\nimport {\r\n\tgetSurveyDetailSuccess,\r\n\tgetSurveyDetailError,\r\n\tsaveSurvey\r\n} from './actions';\r\n\r\nimport surveyDetailData from '../../data/survey.detail.json';\r\n\r\n\r\nconst getSurveyDetailRequest = async () => {\r\n\t\treturn await new Promise((success, fail) => {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tsuccess(surveyDetailData.data);\r\n\t\t\t}, 1000);\r\n\t\t})\r\n\t\t\t.then(response => response)\r\n\t\t\t.catch(error => error);\r\n\r\n}\r\n\r\nconst deleteQuestionRequest = async (quesitonId, survey) => {\r\n\r\n\t\tsurvey.questions = survey.questions.filter(x => x.id !== quesitonId);\r\n\t\treturn await new Promise((success, fail) => {\r\n\t\t\tsuccess(survey);\r\n\t\t})\r\n\t\t\t.then(response => response)\r\n\t\t\t.catch(error => error);\r\n\t\r\n}\r\n\r\n\r\nfunction* getSurveyDetailItems() {\r\n\ttry {\r\n\t\tconst response = yield call(getSurveyDetailRequest);\r\n\t\tyield put(getSurveyDetailSuccess(response));\r\n\t} catch (error) {\r\n\t\tyield put(getSurveyDetailError(error));\r\n\t}\r\n}\r\n\r\nfunction* deleteQuestion({ payload }) {\r\n\ttry {\r\n\t\tconst { questionId, survey } = payload;\r\n\t\tconst response = yield call(deleteQuestionRequest, questionId, survey);\r\n\t\tyield put(saveSurvey(response));\r\n\t} catch (error) {\r\n\t\tyield put(getSurveyDetailError(error));\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport function* watchGetDetail() {\r\n\tyield takeEvery(SURVEY_GET_DETAILS, getSurveyDetailItems);\r\n}\r\n\r\nexport function* watchDeleteQuestion() {\r\n\tyield takeEvery(SURVEY_DELETE_QUESTION, deleteQuestion);\r\n}\r\n\r\n\r\n\r\nexport default function* rootSaga() {\r\n\tyield all([\r\n\t\tfork(watchGetDetail),\r\n\t\tfork(watchDeleteQuestion),\r\n\t]);\r\n}","import { all } from 'redux-saga/effects';\r\nimport authSagas from './auth/saga';\r\nimport todoSagas from './todo/saga';\r\nimport chatSagas from './chat/saga';\r\nimport surveyListSagas from './surveyList/saga';\r\nimport surveyDetailSagas from './surveyDetail/saga';\r\n\r\nexport default function* rootSaga(getState) {\r\n  yield all([\r\n    authSagas(),\r\n    todoSagas(),\r\n    chatSagas(),\r\n    surveyListSagas(),\r\n    surveyDetailSagas()\r\n  ]);\r\n}\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from './reducers';\r\nimport sagas from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nexport function configureStore(initialState) {\r\n\r\n    const store = createStore(\r\n        reducers,\r\n        initialState,\r\n        compose(applyMiddleware(...middlewares))\r\n    );\r\n\r\n    sagaMiddleware.run(sagas);\r\n\r\n    if (module.hot) {\r\n        module.hot.accept('./reducers', () => {\r\n            const nextRootReducer = require('./reducers');\r\n            store.replaceReducer(nextRootReducer);\r\n        });\r\n    }\r\n\r\n    return store;\r\n}\r\n","import React, { Suspense } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nconst App = React.lazy(() => import(/* webpackChunkName: \"App\" */'./App' ));\r\n\r\nReactDOM.render(\r\n  <Provider store={configureStore()}>\r\n    <Suspense fallback={<div className=\"loading\" />}>\r\n      <App />\r\n    </Suspense>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n/*\r\n * If you want your app to work offline and load faster, you can change\r\n * unregister() to register() below. Note this comes with some pitfalls.\r\n * Learn more about service workers: https://bit.ly/CRA-PWA\r\n */\r\nserviceWorker.unregister();\r\n","import {\r\n    TODO_GET_LIST,\r\n    TODO_GET_LIST_SUCCESS,\r\n    TODO_GET_LIST_ERROR,\r\n    TODO_GET_LIST_WITH_FILTER,\r\n    TODO_GET_LIST_WITH_ORDER,\r\n    TODO_GET_LIST_SEARCH,\r\n    TODO_ADD_ITEM,\r\n    TODO_ADD_ITEM_SUCCESS,\r\n    TODO_ADD_ITEM_ERROR,\r\n    TODO_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\n\r\nexport const getTodoList = () => ({\r\n    type: TODO_GET_LIST\r\n});\r\n\r\nexport const getTodoListSuccess = (items) => ({\r\n    type: TODO_GET_LIST_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getTodoListError = (error) => ({\r\n    type: TODO_GET_LIST_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getTodoListWithFilter = (column, value) => ({\r\n    type: TODO_GET_LIST_WITH_FILTER,\r\n    payload: { column, value }\r\n});\r\n\r\nexport const getTodoListWithOrder = (column) => ({\r\n    type: TODO_GET_LIST_WITH_ORDER,\r\n    payload: column\r\n});\r\n\r\nexport const getTodoListSearch = (keyword) => ({\r\n    type: TODO_GET_LIST_SEARCH,\r\n    payload: keyword\r\n});\r\n\r\nexport const addTodoItem = (item) => ({\r\n    type: TODO_ADD_ITEM,\r\n    payload: item\r\n});\r\n\r\nexport const addTodoItemSuccess = (items) => ({\r\n    type: TODO_ADD_ITEM_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const addTodoItemError = (error) => ({\r\n    type: TODO_ADD_ITEM_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const selectedTodoItemsChange = (selectedItems) => ({\r\n    type: TODO_SELECTED_ITEMS_CHANGE,\r\n    payload: selectedItems\r\n});\r\n","import {\r\n    SURVEY_LIST_GET_LIST,\r\n    SURVEY_LIST_GET_LIST_SUCCESS,\r\n    SURVEY_LIST_GET_LIST_ERROR,\r\n    SURVEY_LIST_GET_LIST_WITH_FILTER,\r\n    SURVEY_LIST_GET_LIST_WITH_ORDER,\r\n    SURVEY_LIST_GET_LIST_SEARCH,\r\n    SURVEY_LIST_ADD_ITEM,\r\n    SURVEY_LIST_ADD_ITEM_SUCCESS,\r\n    SURVEY_LIST_ADD_ITEM_ERROR,\r\n    SURVEY_LIST_SELECTED_ITEMS_CHANGE\r\n} from '../actions';\r\n\r\n\r\nexport const getSurveyList = () => ({\r\n    type: SURVEY_LIST_GET_LIST\r\n});\r\n\r\nexport const getSurveyListSuccess = (items) => ({\r\n    type: SURVEY_LIST_GET_LIST_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getSurveyListError = (error) => ({\r\n    type: SURVEY_LIST_GET_LIST_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const getSurveyListWithFilter = (column, value) => ({\r\n    type: SURVEY_LIST_GET_LIST_WITH_FILTER,\r\n    payload: { column, value }\r\n});\r\n\r\nexport const getSurveyListWithOrder = (column) => ({\r\n    type: SURVEY_LIST_GET_LIST_WITH_ORDER,\r\n    payload: column\r\n});\r\n\r\nexport const getSurveyListSearch = (keyword) => ({\r\n    type: SURVEY_LIST_GET_LIST_SEARCH,\r\n    payload: keyword\r\n});\r\n\r\nexport const addSurveyItem = (item) => ({\r\n    type: SURVEY_LIST_ADD_ITEM,\r\n    payload: item\r\n});\r\n\r\nexport const addSurveyItemSuccess = (items) => ({\r\n    type: SURVEY_LIST_ADD_ITEM_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const addSurveyItemError = (error) => ({\r\n    type: SURVEY_LIST_ADD_ITEM_ERROR,\r\n    payload: error\r\n});\r\n\r\nexport const selectedSurveyItemsChange = (selectedItems) => ({\r\n    type: SURVEY_LIST_SELECTED_ITEMS_CHANGE,\r\n    payload: selectedItems\r\n});\r\n","import {\r\n    SURVEY_GET_DETAILS,\r\n    SURVEY_GET_DETAILS_SUCCESS,\r\n    SURVEY_GET_DETAILS_ERROR,\r\n    SURVEY_DELETE_QUESTION,\r\n    SURVEY_SAVE\r\n} from '../actions';\r\n\r\n\r\nexport const getSurveyDetail = () => ({\r\n    type: SURVEY_GET_DETAILS\r\n});\r\n\r\nexport const getSurveyDetailSuccess = (items) => ({\r\n    type: SURVEY_GET_DETAILS_SUCCESS,\r\n    payload: items\r\n});\r\n\r\nexport const getSurveyDetailError = (error) => ({\r\n    type: SURVEY_GET_DETAILS_ERROR,\r\n    payload: error\r\n});\r\n\r\n\r\nexport const deleteSurveyQuestion = (questionId,survey) => ({\r\n    type: SURVEY_DELETE_QUESTION,\r\n    payload: {questionId,survey}\r\n});\r\n\r\nexport const saveSurvey = (survey) => ({\r\n    type: SURVEY_SAVE,\r\n    payload: survey\r\n});","import { defaultDirection } from \"../constants/defaultValues\";\r\n\r\nexport const mapOrder = (array, order, key) => {\r\n  array.sort(function (a, b) {\r\n    var A = a[key], B = b[key];\r\n    if (order.indexOf(A + \"\") > order.indexOf(B + \"\")) {\r\n      return 1;\r\n    } else {\r\n      return -1;\r\n    }\r\n  });\r\n  return array;\r\n};\r\n\r\n\r\nexport const getDateWithFormat = () => {\r\n  const today = new Date();\r\n  let dd = today.getDate();\r\n  let mm = today.getMonth() + 1; //January is 0!\r\n\r\n  var yyyy = today.getFullYear();\r\n  if (dd < 10) {\r\n    dd = '0' + dd;\r\n  }\r\n  if (mm < 10) {\r\n    mm = '0' + mm;\r\n  }\r\n  return dd + '.' + mm + '.' + yyyy;\r\n}\r\n\r\nexport const getCurrentTime=()=>{\r\n  const now = new Date();\r\n  return now.getHours() + \":\" + now.getMinutes()\r\n}\r\n\r\n\r\nexport const getDirection = () => {\r\n  let direction = defaultDirection;\r\n  if (localStorage.getItem(\"direction\")) {\r\n    const localValue = localStorage.getItem(\"direction\");\r\n    if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n      direction = localValue;\r\n    }\r\n  }\r\n  return {\r\n    direction,\r\n    isRtl: direction === \"rtl\"\r\n  };\r\n};\r\n\r\nexport const setDirection = localValue => {\r\n  let direction = \"ltr\";\r\n  if (localValue === \"rtl\" || localValue === \"ltr\") {\r\n    direction = localValue;\r\n  }\r\n  localStorage.setItem(\"direction\", direction);\r\n};\r\n\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nimport {firebaseConfig} from '../constants/defaultValues'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst auth = firebase.auth();\r\nconst database = firebase.database();\r\n\r\nexport {\r\n   auth,\r\n   database\r\n};\r\n","import \"./assets/css/vendor/bootstrap.min.css\";\r\nimport \"./assets/css/vendor/bootstrap.rtl.only.min.css\";\r\nimport \"react-circular-progressbar/dist/styles.css\";\r\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport \"react-table/react-table.css\";\r\nimport 'react-image-lightbox/style.css';\r\nimport \"video.js/dist/video-js.css\";\r\n\r\n\r\nimport { isMultiColorActive, defaultColor,themeColorStorageKey,isDarkSwitchActive } from \"./constants/defaultValues\";\r\nconst color =\r\n  (isMultiColorActive||isDarkSwitchActive ) && localStorage.getItem(themeColorStorageKey)\r\n    ? localStorage.getItem(themeColorStorageKey)\r\n    : defaultColor;\r\n\r\nlocalStorage.setItem(themeColorStorageKey, color);\r\nlet render = () => {\r\n  import('./assets/css/sass/themes/gogo.' + color + '.scss').then(x => {\r\n     require('./AppRenderer');\r\n  });\r\n};\r\nrender();","var map = {\n\t\"./gogo.dark.blue.scss\": [\n\t\t160,\n\t\t54\n\t],\n\t\"./gogo.dark.green.scss\": [\n\t\t161,\n\t\t55\n\t],\n\t\"./gogo.dark.orange.scss\": [\n\t\t162,\n\t\t56\n\t],\n\t\"./gogo.dark.purple.scss\": [\n\t\t163,\n\t\t57\n\t],\n\t\"./gogo.dark.red.scss\": [\n\t\t164,\n\t\t58\n\t],\n\t\"./gogo.light.blue.scss\": [\n\t\t165,\n\t\t59\n\t],\n\t\"./gogo.light.green.scss\": [\n\t\t166,\n\t\t60\n\t],\n\t\"./gogo.light.orange.scss\": [\n\t\t167,\n\t\t61\n\t],\n\t\"./gogo.light.purple.scss\": [\n\t\t168,\n\t\t62\n\t],\n\t\"./gogo.light.red.scss\": [\n\t\t169,\n\t\t63\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 7);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 97;\nmodule.exports = webpackAsyncContext;"],"sourceRoot":""}