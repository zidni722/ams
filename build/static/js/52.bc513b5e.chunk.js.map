{"version":3,"sources":["components/common/CustomBootstrap.js","containers/navs/Breadcrumb.js","components/common/react-notifications/index.js","containers/form-validations/FormikEditKaryawan.js","views/app/menu-karyawan/edit-karyawan.js"],"names":["Colxx","props","widths","Separator","className","getMenuTitle","sub","id","getUrl","path","index","split","BreadcrumbItems","match","substr","paths","length","indexOf","filter","x","map","key","active","to","BreadcrumbContainer","heading","Notifications","FormikEditKaryawan","Component","constructor","super","handleChange","e","target","name","value","this","setState","handlerSelectChange","action","reactLocalStorage","set","handlerSubmit","event","values","a","preventDefault","apiClient","defaults","headers","common","formData","FormData","append","state","code","email","phone","address","city","role","division","put","detailUser","then","res","status","get","me","newMe","data","token","remove","setObject","window","location","href","catch","console","log","message","NotificationManager","error","visible","onDrop","bind","componentDidMount","dataRoles","roles","push","label","dataDivisions","divisions","dataCities","cities","uri","substring","lastIndexOf","role_id","division_id","city_id","role_name","division_name","city_name","photo","concat","render","Row","xxs","Card","CardBody","enableReinitialize","setFieldValue","setFieldTouched","errors","touched","isSubmitting","onSubmit","FormGroup","Label","defaultValue","onChange","type","options","onBlur","country","validate","number","errorMessage","required","component","Button","color","EditKaryawan","Breadcrumb","lg"],"mappings":"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","file":"static/js/52.bc513b5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col } from 'reactstrap';\r\nconst Colxx = (props) => (\r\n    <Col {...props} widths={['xxs', 'xs', 'sm', 'md', 'lg', 'xl', 'xxl']} />\r\n);\r\nconst Separator = (props) => (\r\n    <div className={`separator ${props.className}`}></div>\r\n);\r\nexport { Colxx,Separator }","import React, { Fragment } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport IntlMessages from \"../../helpers/IntlMessages\";\r\n\r\nconst getMenuTitle = sub => {\r\n  return <IntlMessages id={`menu.${sub}`} />;\r\n};\r\n\r\nconst getUrl = (path, sub, index) => {\r\n  if (index === 0) {\r\n    return \"\";\r\n  } else {\r\n    return path.split(sub)[0] + sub;\r\n  }\r\n};\r\n\r\nconst BreadcrumbContainer = ({ heading, match }) => {\r\n  return (\r\n    <Fragment>\r\n      {heading && <h1><IntlMessages id={heading}/></h1>}\r\n      <BreadcrumbItems match={match} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport const BreadcrumbItems = ({ match }) => {\r\n  const path = match.path.substr(1);\r\n  let paths = path.split(\"/\");\r\n  if (paths[paths.length - 1].indexOf(\":\") > -1) {\r\n    paths = paths.filter(x => x.indexOf(\":\") === -1);\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <Breadcrumb className=\"pt-0 breadcrumb-container d-none d-sm-block d-lg-inline-block\">\r\n        {paths.map((sub, index) => {\r\n          return (\r\n            <BreadcrumbItem key={index} active={paths.length === index + 1}>\r\n              {paths.length !== index + 1 ? (\r\n                <NavLink to={\"/\" + getUrl(path, sub, index)}>\r\n                  {getMenuTitle(sub)}\r\n                </NavLink>\r\n              ) : (\r\n                getMenuTitle(sub)\r\n              )}\r\n            </BreadcrumbItem>\r\n          );\r\n        })}\r\n      </Breadcrumb>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default BreadcrumbContainer;\r\n","import Notifications from './Notifications.js';\r\nimport NotificationContainer from './NotificationContainer';\r\nimport NotificationManager from './NotificationManager';\r\n\r\nexport { Notifications, NotificationContainer, NotificationManager };\r\nexport default Notifications;\r\n","import React, { Component } from \"react\";\r\nimport { reactLocalStorage } from 'reactjs-localstorage';\r\n\r\nimport { Form, Formik } from \"formik\";\r\n\r\nimport { Button, Card, CardBody, FormGroup, Label, Row } from \"reactstrap\";\r\nimport { Colxx } from \"../../components/common/CustomBootstrap\";\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport { apiClient } from \"../../helpers/ApiService\";\r\nimport Select from 'react-select'\r\nimport { NotificationManager } from \"../../components/common/react-notifications\";\r\nimport { me } from \"../../constants/defaultValues\";\r\n\r\n\r\nclass FormikEditKaryawan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            detailUser: ''\r\n        };\r\n        this.onDrop = this.onDrop.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        apiClient.get('/roles')\r\n            .then(res => {\r\n                let dataRoles = [];\r\n                const roles = res.data.data;\r\n                for (const role of roles) {\r\n                    dataRoles.push({ value: role.id, label: role.name })\r\n                }\r\n                this.setState({ dataRoles });\r\n            }).catch((e) => {\r\n                console.log(e.message)\r\n            });\r\n\r\n        apiClient.get('/divisions')\r\n            .then(res => {\r\n                let dataDivisions = [];\r\n                const divisions = res.data.data;\r\n                for (const division of divisions) {\r\n                    dataDivisions.push({ value: division.id, label: division.name })\r\n                }\r\n                this.setState({ dataDivisions });\r\n            }).catch((e) => {\r\n                console.log(e.message)\r\n            });\r\n\r\n        apiClient.get('/cities')\r\n            .then(res => {\r\n                let dataCities = [];\r\n                const cities = res.data.data;\r\n                for (const city of cities) {\r\n                    dataCities.push({ value: city.id, label: city.name })\r\n                }\r\n                this.setState({ dataCities });\r\n            }).catch((e) => {\r\n                console.log(e.message)\r\n            })\r\n\r\n        const userID = uri => uri.substring(uri.lastIndexOf('/') + 1);\r\n\r\n        apiClient.get('/users/' + userID(window.location.href))\r\n            .then(res => {\r\n                this.setState({ detailUser: res.data.data })\r\n\r\n                this.setState({ code: this.state.detailUser.code })\r\n                this.setState({ name: this.state.detailUser.name })\r\n                this.setState({ email: this.state.detailUser.email })\r\n                this.setState({ role: this.state.detailUser.role_id })\r\n                this.setState({ division: this.state.detailUser.division_id })\r\n                this.setState({ city: this.state.detailUser.city_id })\r\n                this.setState({ phone: this.state.detailUser.phone })\r\n                this.setState({ address: this.state.detailUser.address })\r\n\r\n                reactLocalStorage.set('defaultRoleValue', this.state.detailUser.role_id);\r\n                reactLocalStorage.set('defaultRoleLabel', this.state.detailUser.role_name);\r\n                reactLocalStorage.set('defaultDivisionValue', this.state.detailUser.division_id);\r\n                reactLocalStorage.set('defaultDivisionLabel', this.state.detailUser.division_name);\r\n                reactLocalStorage.set('defaultCityValue', this.state.detailUser.city_id);\r\n                reactLocalStorage.set('defaultCityLabel', this.state.detailUser.city_name);\r\n\r\n            }).catch((e) => {\r\n                console.log(e.message)\r\n            })\r\n    }\r\n\r\n    onDrop(photo) {\r\n        this.setState({\r\n            photo: this.state.photo.concat(photo),\r\n        });\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handlerSelectChange = (e, action) => {\r\n        const { value } = e;\r\n        const name = action\r\n        this.setState({ [name]: value });\r\n        reactLocalStorage.set(name, value);\r\n    };\r\n\r\n    handlerSubmit = async (event, values) => {\r\n        event.preventDefault();\r\n\r\n        apiClient.defaults.headers.common['Content-Type'] = 'application/json';\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('code', this.state.code)\r\n        formData.append('name', this.state.name)\r\n        formData.append('email', this.state.email)\r\n        formData.append('phone', this.state.phone)\r\n        formData.append('address', this.state.address)\r\n        formData.append('code', this.state.code)\r\n        formData.append('city_id', this.state.city)\r\n        formData.append('role_id', this.state.role)\r\n        formData.append('division_id', this.state.division)\r\n\r\n        apiClient.put('/users/' + this.state.detailUser.id, formData)\r\n            .then(res => {\r\n                if (res.status === 200) {\r\n                    apiClient.get('/users/' + this.state.detailUser.id)\r\n                        .then(res => {\r\n                            if (res.status === 200) {\r\n                                if (me.id === this.state.detailUser.id) {\r\n                                    const newMe = res.data.data\r\n                                    newMe.token = me.token\r\n    \r\n                                    reactLocalStorage.remove('me')\r\n                                    reactLocalStorage.setObject('me', newMe)                                        \r\n                                }\r\n                                window.location.href = \"../detail-karyawan/\" + this.state.detailUser.id\r\n                                reactLocalStorage.set('isSuccesSubmit', true)\r\n                            }\r\n                        }).catch((e) => {\r\n                            console.log(e.message)\r\n                            NotificationManager.error(\r\n                                \"Silahkan coba kembali beberapa saat lagi!\",\r\n                                \"Terjadi Kesalahan\",\r\n                                5000,\r\n                                () => {\r\n                                    this.setState({ visible: false });\r\n                                },\r\n                                null\r\n                            );\r\n                        });\r\n                }\r\n            }).catch((e) => {\r\n                console.log(e.message)\r\n                NotificationManager.error(\r\n                    \"Silahkan coba kembali beberapa saat lagi!\",\r\n                    \"Terjadi Kesalahan\",\r\n                    5000,\r\n                    () => {\r\n                        this.setState({ visible: false });\r\n                    },\r\n                    null\r\n                );\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Row className=\"mb-4\">\r\n                <Colxx xxs=\"12\">\r\n                    <Card>\r\n                        <CardBody>\r\n                            <Formik enableReinitialize={true}\r\n                            >\r\n                                {({\r\n                                    setFieldValue,\r\n                                    setFieldTouched,\r\n                                    values,\r\n                                    errors,\r\n                                    touched,\r\n                                    isSubmitting\r\n                                }) => (\r\n                                        <Form onSubmit={this.handlerSubmit} className=\"av-tooltip tooltip-label-right\">\r\n                                            <FormGroup className=\"error-l-50\">\r\n                                                <Label>NPK</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    name=\"code\"\r\n                                                    defaultValue={this.state.detailUser.code}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup className=\"error-l-100\">\r\n                                                <Label>Nama Lengkap</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    name=\"name\"\r\n                                                    defaultValue={this.state.detailUser.name}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup>\r\n                                                <Label>Email</Label>\r\n                                                <input\r\n                                                    className=\"form-control\"\r\n                                                    name=\"email\"\r\n                                                    type=\"email\"\r\n                                                    defaultValue={this.state.detailUser.email}\r\n                                                    onChange={this.handleChange}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup className=\"error-l-50\">\r\n                                                <Label>Role</Label>\r\n                                                <Select\r\n                                                    name=\"role\"\r\n                                                    id=\"role\"\r\n                                                    defaultValue={{ value: reactLocalStorage.get('defaultRoleValue'), label: reactLocalStorage.get('defaultRoleLabel') }}\r\n                                                    options={this.state.dataRoles}\r\n                                                    onChange={e => this.handlerSelectChange(e, 'role')}\r\n                                                    onBlur={setFieldTouched}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup className=\"error-l-50\">\r\n                                                <Label>Divisi</Label>\r\n                                                <Select\r\n                                                    name=\"division\"\r\n                                                    id=\"division\"\r\n                                                    defaultValue={{ value: reactLocalStorage.get('defaultDivisionValue'), label: reactLocalStorage.get('defaultDivisionLabel') }}\r\n                                                    options={this.state.dataDivisions}\r\n                                                    onChange={e => this.handlerSelectChange(e, 'division')}\r\n                                                    onBlur={setFieldTouched}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup className=\"error-l-50\">\r\n                                                <Label>Nomor Telepon</Label>\r\n                                                <PhoneInput\r\n                                                    className=\"form-control\"\r\n                                                    name=\"phone\"\r\n                                                    country='id'\r\n                                                    validate={{\r\n                                                        number: {\r\n                                                            value: true,\r\n                                                            errorMessage: \"Value must be a number\"\r\n                                                        },\r\n                                                        required: {\r\n                                                            value: true,\r\n                                                            errorMessage: \"Please enter a number\"\r\n                                                        }\r\n                                                    }}\r\n                                                    value={this.state.detailUser.phone}\r\n                                                    onChange={phone => this.setState({ phone })}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup className=\"error-l-50\">\r\n                                                <Label>City</Label>\r\n                                                <Select\r\n                                                    name=\"city\"\r\n                                                    id=\"city\"\r\n                                                    defaultValue={{ value: reactLocalStorage.get('defaultCityValue'), label: reactLocalStorage.get('defaultCityLabel') }}\r\n                                                    options={this.state.dataCities}\r\n                                                    onChange={e => this.handlerSelectChange(e, 'city')}\r\n                                                    onBlur={setFieldTouched}\r\n                                                />\r\n                                            </FormGroup>\r\n\r\n                                            <FormGroup>\r\n                                                <Label>Alamat</Label>\r\n                                                <input\r\n                                                    onChange={this.handleChange}\r\n                                                    className=\"form-control\"\r\n                                                    name=\"address\"\r\n                                                    component=\"textarea\"\r\n                                                    defaultValue={this.state.detailUser.address}\r\n                                                />\r\n                                                {errors.address && touched.address ? (\r\n                                                    <div className=\"invalid-feedback d-block\">\r\n                                                        {errors.address}\r\n                                                    </div>\r\n                                                ) : null}\r\n                                            </FormGroup>\r\n\r\n                                            <div className=\"d-flex justify-content-between align-items-center\"><p />\r\n                                                <Button color=\"primary\" type=\"submit\">\r\n                                                    Submit\r\n                                            </Button>\r\n                                            </div>\r\n                                        </Form>\r\n                                    )}\r\n                            </Formik>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Colxx>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FormikEditKaryawan;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Row } from \"reactstrap\";\r\nimport { Colxx, Separator } from \"../../../components/common/CustomBootstrap\";\r\nimport Breadcrumb from \"../../../containers/navs/Breadcrumb\";\r\n\r\nimport FormikEditKaryawan from \"../../../containers/form-validations/FormikEditKaryawan\";\r\n\r\nexport default class EditKaryawan extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Row>\r\n                    <Colxx xxs=\"12\">\r\n                        <Breadcrumb\r\n                            heading=\"menu.edit-karyawan\"\r\n                            match={this.props.match}\r\n                        />\r\n                        <Separator className=\"mb-5\" />\r\n                    </Colxx>\r\n                </Row>\r\n                <Row>\r\n                    <Colxx xxs=\"12\" lg=\"3\" className=\"mb-3\" />\r\n                    <Colxx xxs=\"12\" lg=\"6\" className=\"mb-3\">\r\n                        <FormikEditKaryawan />\r\n                    </Colxx>\r\n                </Row>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n"],"sourceRoot":""}